"""Compare different chunking methods"""
from src.modules.chunking.smart_chunker import SmartChunker

def compare_methods():
    # Test text with complex structure
    text = """CH∆Ø∆†NG 1: GI·ªöI THI·ªÜU

Ch√≠ Ph√®o l√† m·ªôt t√°c ph·∫©m vƒÉn h·ªçc n·ªïi ti·∫øng. C√¢u chuy·ªán k·ªÉ v·ªÅ cu·ªôc ƒë·ªùi bi th·∫£m c·ªßa m·ªôt ng∆∞·ªùi n√¥ng d√¢n.

1.1 B·ªëi c·∫£nh x√£ h·ªôi
Vi·ªát Nam tr∆∞·ªõc nƒÉm 1945 l√† m·ªôt x√£ h·ªôi phong ki·∫øn l·∫°c h·∫≠u. Ng∆∞·ªùi n√¥ng d√¢n chi·∫øm ƒëa s·ªë d√¢n s·ªë nh∆∞ng kh√¥ng c√≥ ru·ªông ƒë·∫•t.

1.2 Nh√¢n v·∫≠t ch√≠nh
Ch√≠ Ph√®o v·ªën l√† ng∆∞·ªùi hi·ªÅn l√†nh. Sau khi b·ªã h√£m h·∫°i, h·∫Øn tr·ªü th√†nh k·∫ª v√¥ lo·∫°i.

CH∆Ø∆†NG 2: PH√ÇN T√çCH T√ÅC PH·∫®M

T√°c ph·∫©m th·ªÉ hi·ªán t√†i nƒÉng c·ªßa Nam Cao trong vi·ªác kh·∫Øc h·ªça t√¢m l√Ω nh√¢n v·∫≠t."""

    print("üìä CHUNKING METHOD COMPARISON")
    print("="*60)
    print(f"Original text: {len(text)} characters\n")
    
    # Method 1: Simple fixed-size chunks
    simple_chunks = []
    chunk_size = 200
    for i in range(0, len(text), chunk_size):
        simple_chunks.append(text[i:i+chunk_size])
    
    print("‚ùå SIMPLE FIXED-SIZE CHUNKING:")
    print(f"Chunks: {len(simple_chunks)}")
    print(f"Problem: Cuts in middle of sentences!")
    print(f"Example: '{simple_chunks[1][-20:]}...'")
    
    # Method 2: Smart chunking
    print("\n‚úÖ SMART CHUNKING:")
    chunker = SmartChunker(chunk_size=200, overlap_size=30)
    smart_chunks = chunker.chunk_text(text, preserve_paragraphs=True)
    
    print(f"Chunks: {len(smart_chunks)}")
    print(f"Preserves: Paragraph boundaries, sentence integrity")
    
    for i, chunk in enumerate(smart_chunks[:3]):
        print(f"\nChunk {i+1}:")
        print(f"- Position: {chunk['position']}")
        print(f"- Clean start: '{chunk['text'][:30]}...'")
        print(f"- Clean end: '...{chunk['text'][-30:]}'")

if __name__ == "__main__":
    compare_methods()
